name: 构建

on:
  push:
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  builder_matrix:
    strategy:
      fail-fast: false
      matrix:
        arch: [x86, x64]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.8.10'
          architecture: ${{ matrix.arch }}
      - name: Setup uv
        uses: astral-sh/setup-uv@v4
      - name: Run Windows build
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          uv venv
          .venv\Scripts\activate
          uv pip install -r requirements.txt
          uv pip install pyinstaller
          pyinstaller GUI.py `
            -w `
            -i ./icon.ico

      - name: Upload
        uses: actions/upload-artifact@v4.4.2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: ./build/GUI

      - name: Compress GUI contents
        run: |
          Compress-Archive -Path ./Build/GUI/* -DestinationPath gui_contents.zip

      - name: Upload assets to GitHub Release
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: softprops/action-gh-release@v1
        with:
          files: gui_contents.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
